plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'ru.neoflex.trainingcenter'
version = '0.0.2'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-dependencies:2021.0.3'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.3'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'org.liquibase:liquibase-core'
    implementation 'ru.azobnina:lib-log:0.0.1'
    implementation 'ru.azobnina:lib-log-web:0.0.1'
    implementation 'ru.azobnina:lib-log-kafka:0.0.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    implementation 'org.springframework.kafka:spring-kafka:2.8.6'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:3.0.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
    testImplementation 'org.testcontainers:postgresql:1.17.3'
    testImplementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'org.yaml' }
    testImplementation group: 'org.yaml', name: 'snakeyaml', version: '1.28'
}

tasks.named('test') {
    useJUnitPlatform()
}
